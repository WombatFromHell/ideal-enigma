name: Cache Cleanup

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          echo "Fetching list of cache keys..."

          # Get current timestamp in seconds
          current_time=$(date +%s)
          # 14 days in seconds
          cutoff_seconds=$((14 * 24 * 60 * 60))

          # List all caches and format as JSON for easier parsing
          caches_json=$(gh api -H "Accept: application/vnd.github+json" /repos/$REPO/actions/caches)

          # Use jq to parse the JSON and extract relevant information
          echo "$caches_json" | jq -r '.actions_caches[] | select(.key != null) | {key: .key, created_at: .created_at} | @sh "CACHE_KEY=\(.key) CREATED_AT=\(.created_at)"' | while read -r cache_info; do
            eval "$cache_info"

            # Convert ISO 8601 date to timestamp
            cache_time=$(date -d "$CREATED_AT" +%s)
            age_seconds=$((current_time - cache_time))

            if [ $age_seconds -gt $cutoff_seconds ]; then
              echo "Deleting cache key: $CACHE_KEY (created on $CREATED_AT)"
              gh actions-cache delete "$CACHE_KEY" -R $REPO --confirm
            else
              echo "Keeping cache key: $CACHE_KEY (created on $CREATED_AT)"
            fi
          done

          echo "Cache cleanup completed"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
