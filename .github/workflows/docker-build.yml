name: Build Containers
on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}

permissions:
  contents: read
  packages: write

jobs:
  build-push-tag:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        container:
          # - name: devbox-nvidia
          #   file: ./Containerfile.nvidia.devbox
          - name: devbox
            file: ./Containerfile.devbox

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        shell: bash
        run: |
          echo "REPO_LOWER=${{ github.repository }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_ENV

      - name: Extract Git metadata
        id: git-info
        run: |
          if [ "${{ github.ref_type }}" == "tag" ]; then
            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/testing" ]; then
            echo "VERSION=testing" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "VERSION=stable" >> $GITHUB_ENV
            # ensure "latest" tag is pinned to main branch only
            echo "LATEST_TAG=latest" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Login to GHCR with Podman
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build container image with Podman
        run: |
          podman build \
          --platform linux/amd64 \
            --tag ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.VERSION }} \
            --file ${{ matrix.container.file }}

      - name: Tag image with latest (if on main branch)
        if: env.LATEST_TAG != ''
        run: |
          podman tag ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.VERSION }} ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.LATEST_TAG }}

      - name: Push images to GHCR with Skopeo
        run: |
          # Push the versioned tag
          skopeo copy \
            --dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} \
            containers-storage:ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.VERSION }} \
            docker://ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.VERSION }}

          # Push the latest tag if it exists
          if [ -n "${{ env.LATEST_TAG }}" ]; then
            skopeo copy \
              --dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} \
              containers-storage:ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.LATEST_TAG }} \
              docker://ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.LATEST_TAG }}
          fi

      - name: Cleanup local images
        if: always()
        run: |
          podman rmi ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.VERSION }} || true
          if [ -n "${{ env.LATEST_TAG }}" ]; then
            podman rmi ghcr.io/${{ env.REPO_LOWER }}/${{ matrix.container.name }}:${{ env.LATEST_TAG }} || true
          fi
