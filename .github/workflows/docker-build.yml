name: Build Containers

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}

permissions:
  contents: read
  packages: write

jobs:
  build-push-tag:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        container:
          - suffix: ""
            file: ./Containerfile.devbox
          # - suffix: "-nvidia"
          #   file: ./Containerfile.nvidia.devbox

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Extract Git metadata
        id: git-info
        run: |
          if [ "${{ github.ref_type }}" == "tag" ]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/testing" ]; then
            echo "version=testing" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "version=stable" >> $GITHUB_OUTPUT
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Set image variables
        run: |
          echo "REMOTE_IMAGE=ghcr.io/${{ env.REPO_LOWER }}${{ matrix.container.suffix }}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${{ steps.git-info.outputs.version }}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=${{ steps.git-info.outputs.latest_tag }}" >> $GITHUB_ENV

      - name: Prepare tag list
        id: tag-list
        run: |
          TAGS="${IMAGE_VERSION}"
          if [ -n "${IMAGE_LATEST}" ]; then
            TAGS="${TAGS}"$'\n'"${IMAGE_LATEST}"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "${TAGS}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build image (but don't push)
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          containerfiles: |
            ${{ matrix.container.file }}
          image: ${{ env.REMOTE_IMAGE }}
          tags: ${{ steps.tag-list.outputs.tags }}
          platforms: linux/amd64

      - name: Push image to GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.REMOTE_IMAGE }}
          tags: ${{ steps.tag-list.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
