FROM debian:sid

ARG NV_DRIVER_VER=565.77
ARG DEB_SRC_TARGET=/etc/apt/sources.list.d/debian.sources

RUN apt-get update && \
  apt-get install -y \
  wget gpg git curl apt-transport-https \
  xdg-desktop-portal-kde flatpak-xdg-utils \
  libfuse2 fish bat eza fzf rdfind fd-find ripgrep zoxide pulseaudio

# Install VSCode repo
RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor >packages.microsoft.gpg && \
  install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg && \
  echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | tee /etc/apt/sources.list.d/vscode.list >/dev/null && \
  rm -f packages.microsoft.gpg

# Install Brave browser repo
RUN wget -q https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg -O- | tee /usr/share/keyrings/brave-browser-archive-keyring.gpg >/dev/null && \
  echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | tee /etc/apt/sources.list.d/brave-browser-release.list >/dev/null

# Install Firefox-dev browser repo
RUN wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | tee /etc/apt/keyrings/packages.mozilla.org.asc >/dev/null && \
  echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | tee -a /etc/apt/sources.list.d/mozilla.list >/dev/null && \
  echo "Package: *\nPin: origin packages.mozilla.org\nPin-Priority: 1000" | tee -a /etc/apt/preferences.d/mozilla >/dev/null

# make sure appropriate media codecs are installed for firefox to use
RUN cp -f "$DEB_SRC_TARGET" "$DEB_SRC_TARGET.bak" && \
  sed -i 's/Components: main/Components: main contrib non-free non-free-firmware/' "$DEB_SRC_TARGET" && \
  apt-get update && \
  apt-get install -y ffmpeg brave-browser code firefox-devedition

# only install nvidia driver libs/utils and not kernel modules
RUN apt-get install -y build-essential kmod gcc-multilib libglvnd-dev pkg-config mesa-utils vulkan-tools nvidia-vaapi-driver vainfo && \
  wget -q https://us.download.nvidia.com/XFree86/Linux-x86_64/${NV_DRIVER_VER}/NVIDIA-Linux-x86_64-${NV_DRIVER_VER}.run && \
  chmod +x NVIDIA-Linux-x86_64-${NV_DRIVER_VER}.run
RUN ./NVIDIA-Linux-x86_64-${NV_DRIVER_VER}.run --no-kernel-modules --no-x-check -s

ENTRYPOINT [ "/bin/bash" ]
